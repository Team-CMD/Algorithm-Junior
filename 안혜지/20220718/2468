from collections import deque

N = int(input())
graph = []

for _ in range(N):
    graph.append(list(map(int, input().split())))

maxnum = 0
for i in graph:
    for j in i:
        if maxnum < j:
            maxnum = j

dx = [1, -1, 0, 0]
dy = [0, 0, -1, 1]

def bfs(x, y):
    q = deque()
    q.append([x, y])
    visited[x][y] = 1

    while q:
        x, y = q.popleft()
        
        for i in range(4):
            nx, ny = dx[i] + x, dy[i] + y
            if nx < 0 or nx >= N or ny < 0 or ny >= N:
                continue
            if graph[nx][ny] > water and visited[nx][ny] == 0:
                q.append([nx, ny])
                visited[nx][ny] = 1

ans = 0

for water in range(maxnum):
    cnt = 0
    visited = [[0]*N for _ in range(N)]
    for i in range(N):
        for j in range(N):
            if graph[i][j] > water and visited[i][j] == 0:
                bfs(i,j)
                cnt += 1

    ans = max(ans, cnt)

print(ans)
